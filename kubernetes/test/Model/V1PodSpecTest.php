<?php
/**
 * V1PodSpecTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  CBSi\Kubernetes
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace CBSi\Kubernetes;

/**
 * V1PodSpecTest Class Doc Comment
 *
 * @category    Class */
// * @description PodSpec is a description of a pod.
/**
 * @package     CBSi\Kubernetes
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class V1PodSpecTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "V1PodSpec"
     */
    public function testV1PodSpec()
    {
    }

    /**
     * Test attribute "active_deadline_seconds"
     */
    public function testPropertyActiveDeadlineSeconds()
    {
    }

    /**
     * Test attribute "affinity"
     */
    public function testPropertyAffinity()
    {
    }

    /**
     * Test attribute "automount_service_account_token"
     */
    public function testPropertyAutomountServiceAccountToken()
    {
    }

    /**
     * Test attribute "containers"
     */
    public function testPropertyContainers()
    {
    }

    /**
     * Test attribute "dns_policy"
     */
    public function testPropertyDnsPolicy()
    {
    }

    /**
     * Test attribute "host_aliases"
     */
    public function testPropertyHostAliases()
    {
    }

    /**
     * Test attribute "host_ipc"
     */
    public function testPropertyHostIpc()
    {
    }

    /**
     * Test attribute "host_network"
     */
    public function testPropertyHostNetwork()
    {
    }

    /**
     * Test attribute "host_pid"
     */
    public function testPropertyHostPid()
    {
    }

    /**
     * Test attribute "hostname"
     */
    public function testPropertyHostname()
    {
    }

    /**
     * Test attribute "image_pull_secrets"
     */
    public function testPropertyImagePullSecrets()
    {
    }

    /**
     * Test attribute "init_containers"
     */
    public function testPropertyInitContainers()
    {
    }

    /**
     * Test attribute "node_name"
     */
    public function testPropertyNodeName()
    {
    }

    /**
     * Test attribute "node_selector"
     */
    public function testPropertyNodeSelector()
    {
    }

    /**
     * Test attribute "restart_policy"
     */
    public function testPropertyRestartPolicy()
    {
    }

    /**
     * Test attribute "scheduler_name"
     */
    public function testPropertySchedulerName()
    {
    }

    /**
     * Test attribute "security_context"
     */
    public function testPropertySecurityContext()
    {
    }

    /**
     * Test attribute "service_account"
     */
    public function testPropertyServiceAccount()
    {
    }

    /**
     * Test attribute "service_account_name"
     */
    public function testPropertyServiceAccountName()
    {
    }

    /**
     * Test attribute "subdomain"
     */
    public function testPropertySubdomain()
    {
    }

    /**
     * Test attribute "termination_grace_period_seconds"
     */
    public function testPropertyTerminationGracePeriodSeconds()
    {
    }

    /**
     * Test attribute "tolerations"
     */
    public function testPropertyTolerations()
    {
    }

    /**
     * Test attribute "volumes"
     */
    public function testPropertyVolumes()
    {
    }
}
