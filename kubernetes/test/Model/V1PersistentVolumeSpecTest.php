<?php
/**
 * V1PersistentVolumeSpecTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  CBSi\Kubernetes
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace CBSi\Kubernetes;

/**
 * V1PersistentVolumeSpecTest Class Doc Comment
 *
 * @category    Class */
// * @description PersistentVolumeSpec is the specification of a persistent volume.
/**
 * @package     CBSi\Kubernetes
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class V1PersistentVolumeSpecTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "V1PersistentVolumeSpec"
     */
    public function testV1PersistentVolumeSpec()
    {
    }

    /**
     * Test attribute "access_modes"
     */
    public function testPropertyAccessModes()
    {
    }

    /**
     * Test attribute "aws_elastic_block_store"
     */
    public function testPropertyAwsElasticBlockStore()
    {
    }

    /**
     * Test attribute "azure_disk"
     */
    public function testPropertyAzureDisk()
    {
    }

    /**
     * Test attribute "azure_file"
     */
    public function testPropertyAzureFile()
    {
    }

    /**
     * Test attribute "capacity"
     */
    public function testPropertyCapacity()
    {
    }

    /**
     * Test attribute "cephfs"
     */
    public function testPropertyCephfs()
    {
    }

    /**
     * Test attribute "cinder"
     */
    public function testPropertyCinder()
    {
    }

    /**
     * Test attribute "claim_ref"
     */
    public function testPropertyClaimRef()
    {
    }

    /**
     * Test attribute "fc"
     */
    public function testPropertyFc()
    {
    }

    /**
     * Test attribute "flex_volume"
     */
    public function testPropertyFlexVolume()
    {
    }

    /**
     * Test attribute "flocker"
     */
    public function testPropertyFlocker()
    {
    }

    /**
     * Test attribute "gce_persistent_disk"
     */
    public function testPropertyGcePersistentDisk()
    {
    }

    /**
     * Test attribute "glusterfs"
     */
    public function testPropertyGlusterfs()
    {
    }

    /**
     * Test attribute "host_path"
     */
    public function testPropertyHostPath()
    {
    }

    /**
     * Test attribute "iscsi"
     */
    public function testPropertyIscsi()
    {
    }

    /**
     * Test attribute "local"
     */
    public function testPropertyLocal()
    {
    }

    /**
     * Test attribute "nfs"
     */
    public function testPropertyNfs()
    {
    }

    /**
     * Test attribute "persistent_volume_reclaim_policy"
     */
    public function testPropertyPersistentVolumeReclaimPolicy()
    {
    }

    /**
     * Test attribute "photon_persistent_disk"
     */
    public function testPropertyPhotonPersistentDisk()
    {
    }

    /**
     * Test attribute "portworx_volume"
     */
    public function testPropertyPortworxVolume()
    {
    }

    /**
     * Test attribute "quobyte"
     */
    public function testPropertyQuobyte()
    {
    }

    /**
     * Test attribute "rbd"
     */
    public function testPropertyRbd()
    {
    }

    /**
     * Test attribute "scale_io"
     */
    public function testPropertyScaleIo()
    {
    }

    /**
     * Test attribute "storage_class_name"
     */
    public function testPropertyStorageClassName()
    {
    }

    /**
     * Test attribute "storageos"
     */
    public function testPropertyStorageos()
    {
    }

    /**
     * Test attribute "vsphere_volume"
     */
    public function testPropertyVsphereVolume()
    {
    }
}
